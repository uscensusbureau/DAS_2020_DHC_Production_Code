# This is the default configuration file for DHCH
# It extends from the prod_default.ini
# Most configuration options for the correct execution of a DHCH run are located here

[DEFAULT]
INCLUDE=default.ini

[python]
[logging]
[ENVIRONMENT]

[reader]
tables = Household Unit
unit_table = Unit
main_table = Household

Household.class = programs.reader.cef_2020.cef_2020_dhch_reader.CEF2020H1HouseholdTable
Unit.class = programs.reader.cef_2020.cef_2020_dhch_reader.CEF2020DHCHUnitTable

Household.generated_module = programs.reader.cef_2020.cef_validator_classes
Household.generated_table = CEF20_UNIT

Unit.generated_module = programs.reader.cef_2020.cef_validator_classes
Unit.generated_table = CEF20_UNIT

Unit.recoder = programs.reader.cef_2020.cef_2020_dhch_reader.H1_2020_recoder
Unit.recode_variables: hhgq

Household.histogram = h1

Household.recoder = programs.reader.cef_2020.cef_2020_dhch_reader.H1_2020_recoder
Household.recode_variables = h1

# variable_name: space delimited list of variables needed to do the recode
h1: qgqtyp vacs
hhgq: qgqtyp vacs

# Include the same attr information as above
h1.type: int
h1.legal: 0,1

hhgq.type: int
hhgq.legal: 0-7

Household.geography = geocode
Unit.geography = geocode
Unit.histogram: hhgq

[gurobi]
;l2_optimization_approach= DataIndUserSpecifiedQueriesNPass

[geodict]
;#smallest to largest (no spaces)
;geolevel_names = Block,Block_Group,Tract,Tract_Group,County,State,US
;#(largest geocode length to smallest, put 0 for US or US+PR (i.e. above state) level)
;geolevel_leng = 16,14,11,8,5,2,0s

[setup]
[engine]

[schema]
schema = H1_2020_SCHEMA

[budget]
epsilon_budget_total= 2

#budget in topdown order (e.g. US, State, .... , Block)
geolevel_budget_prop = 0.15,0.15,0.15,0.15,0.15,0.15,0.1




# start with no queries
DPqueries: detailed
queriesprop: 1

;L2_DPqueryPart0= total, hisp * race, vacant, vacs, tenvacgq
;L2_DPqueryPart1= sex * hisp * race * hhtype_dhch
;L2_DPqueryPart2= elderly * sex * hhtype_dhch
;L2_DPqueryPart3= hhage * hhtype_dhch * sex
;L2_DPqueryPart4= detailed

[constraints]
theinvariants.block = tot_hu, gqhh_tot, tot
theconstraints.block = total

[writer]
multiwriter_writers = BlockNodeDicts, MDF2020H1

[validator]
[assessment]
[takedown]
[experiment]
[error_metrics]
