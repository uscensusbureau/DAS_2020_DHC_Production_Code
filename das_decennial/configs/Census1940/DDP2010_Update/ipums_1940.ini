[DEFAULT]
INCLUDE=../../default.ini

[gurobi]

# Record the optimizers stats in the node object:
record_gurobi_stats: True
print_gurobi_stats: False

[spark]
# Whatever spark options you may have
# not currently implemented

[logging]
logfilename: DAS_1940
loglevel: INFO
logfolder: logs

[ENVIRONMENT]
DAS_FRAMEWORK_VERSION: 0.0.1
GRB_ISV_NAME: Census
GRB_APP_NAME: DAS
GRB_Env3: 0
GRB_Env4:

[geodict]
geolevel_names: Enumdist,Supdist,County,State,National
geolevel_leng: 13,9,6,2,0

[setup]
setup: programs.das_setup.DASDecennialSetup
spark.name: DAS_DDP_DHCP_1940
spark.loglevel: ERROR

[reader]
delimiter: \t
header: True

PersonData.class: programs.reader.ipums_1940.ipums_1940_reader.Persons1940Table
UnitData.class: programs.reader.ipums_1940.ipums_1940_reader.Household1940Table

validate_input_data_constraints: true
reader: programs.reader.table_reader.DASDecennialReader

tables: UnitData PersonData


PersonData.generated_module: programs.reader.ipums_1940.ipums_1940_classes
PersonData.generated_table: P

UnitData.generated_module: programs.reader.ipums_1940.ipums_1940_classes
UnitData.generated_table: H

main_table: PersonData
unit_table: UnitData

PersonData.path: ${DAS_S3INPUTS}/1940/EXT1940USCB.dat
UnitData.path: ${DAS_S3INPUTS}/1940/EXT1940USCB.dat
;PersonData.path: ${DAS_S3INPUTS}/1940/min_EXT.dat
;UnitData.path: ${DAS_S3INPUTS}/1940/min_EXT.dat

PersonData.geography: geocode
PersonData.histogram: hhgq1940 sex1940 age1940 hispanic1940 cenrace1940 citizen1940

UnitData.geography: geocode
UnitData.histogram: hhgq1940

PersonData.recoder: programs.reader.ipums_1940.ipums_1940_reader.person_recoder
PersonData.recode_variables: hhgq1940 sex1940 age1940 hispanic1940 cenrace1940 citizen1940
hhgq1940: gq gqtype
hhgq1940.type: int
hhgq1940.legal: 0-7
sex1940: sex
sex1940.type: int
sex1940.legal: 0,1
age1940: age
age1940.type: int
age1940.legal: 0-115
hispanic1940: hispan
hispanic1940.type: int
hispanic1940.legal: 0,1
cenrace1940: race
cenrace1940.type: int
cenrace1940.legal: 0-5
citizen1940: citizen
citizen1940.type: int
citizen1940.legal: 0,1

UnitData.recoder: programs.reader.ipums_1940.ipums_1940_reader.unit_recoder
UnitData.recode_variables: hhgq1940 geocode
geocode: statefip county supdist enumdist
geocode.type: str
geocode.legal: 0000000000000-9999999999999

[engine]
engine: programs.engine.topdown_engine.TopdownEngine
check_budget: off

delete_raw: 0

[schema]
schema: 1940

[budget]
epsilon_budget_total = 4.0
# Bounded DP multiplier, aka "elementary" sensitivity used for each individual DP query
bounded_dp_multiplier = 2.0

geolevel_budget_prop = 0.2, 0.2, 0.12, 0.12, 0.12, 0.12, 0.12

dpqueries = hhgq1940, age1940 * hispanic1940 * cenrace1940 * citizen1940, age1940 * sex1940, ageGroups4 * sex1940, ageGroups16 * sex1940, ageGroups64 * sex1940, detailed
queriesprop = .2, .5, 0.05, 0.05, 0.05, 0.05, 0.1

[constraints]
theinvariants.enumdist = gqhh_vect, gqhh_tot
theinvariants.state = tot
# The adult correctional, juvenile correctional, and nursing home constraints are not applicable in the 1940s schema.
# The military and college housing constraints do not pass input validation and are thus not applicable either.
;theconstraints.enumdist = hhgq_total_lb, hhgq_total_ub, hhgq1_lessthan15, hhgq2_greaterthan25, hhgq3_lessthan20, hhgq5_lt16gt65, hhgq6_lt17gt65
theconstraints.enumdist = hhgq_total_lb, hhgq_total_ub
theconstraints.state = total, hhgq_total_lb, hhgq_total_ub
minimalschema = hhgq1940


[writer]
writer: programs.writer.ipums_1940.ipums_1940_writer.IPUMSPersonWriter
# Where the data is written
output_path: $DAS_S3ROOT/users/$JBID/DemonstrationProducts_1940Update/full_1940_person/
output_datafile_name: person
produce_flag: 1
keep_attrs: geocode, syn, raw_housing

# delete existing file (if one) 0 or 1
overwrite_flag: 1
save_git_commit: 1

# combine output into a single file
s3cat: 1
s3cat_suffix: .txt
s3cat_verbose: 1
num_parts: 0

[validator]
validator: programs.stub_validator.validator
results_fname: /mnt/tmp/RA_results

[assessment]

[takedown]
takedown: programs.takedown.takedown
delete_output: False

[experiment]
experiment: programs.experiment.experiment.experiment
run_experiment_flag: 0

[error_metrics]
error_metrics: programs.metrics.accuracy_metrics.AccuracyMetrics
