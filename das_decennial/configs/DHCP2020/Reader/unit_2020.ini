[reader]
# package(s).module_name.class_name of the reader module
reader: programs.reader.table_reader.DASDecennialReader
###
### List of tables (assuming 3 but might be more)
### These tables have decennial census specific process methods
### Table class methods will likely need to be rewritten for other applications
###
tables: Person Unit

main_table: Person
unit_table: Unit

;# table_name.class: specify object type of each table
;# Geography.class: table.GeographyTable implement later.
;Person.class: programs.reader.sql_spar_table.SQLSparseHistogramTable
;Unit.class: programs.reader.sql_spar_table.SQLSparseHistogramTable
;# table_name.path - location of dir of filename=======
;
;Person.path: ${DAS_S3INPUTS}/title13_input_data/table13/
;Unit.path: ${DAS_S3INPUTS}/title13_input_data/table10_20190610/

# file format (assuming all tables will have the same file format)
# we could change this to be "table_name.format_option" if need be.
delimiter: \t
header: True
# If a header exists, this must be set to "True".
# table_name.variables - space delimited ordered list of all the variables in a table.
# Geography.variables: state county block etc will add later.



Person.variables: MAFID geocode hispanic sex age race relgq
Unit.variables:  MAFID TEN VACS gqtype geocode
linkage: geocode

###
### For each variable in each table the following must be included:
### variable_name.type: "str" or "int"
### variable_name.legal: comma-delimited list of legal value expressions.
###                      an expression may be a single value or a range
###                      defined by two values with a "-" between them.
###                      All ranges are assumed to be closed on both ends.
###                      ie the range 0-115 includes both 0 and 115.
###
### For each variable the following is optional:
### Not implemented.
###
### Note: we do not use table_name.variable_name.attribute to define these.
###

geocode.type: str
geocode.legal: 0000000000000000-9999999999999999
MAFID.type: str
MAFID.legal: 000000000-999999999

sex.type: int
sex.legal: 0,1

age.type: int
age.legal: 0-115

hispanic.type: int
hispanic.legal: 0,1

relgq.type: int
relgq.legal: 0-41

race.type: str
race.legal: 01-63


TEN.type: int
TEN.legal: 0-3

gqtype.type: str
gqtype.legal: 000-999

VACS.type: int
VACS.legal: 0-7


###
### Some variables must be recoded before the disclosure engine runs.
### These recodes are very specific to the decennial census and in particular
### the 2018 test. However the module is pluggable or may be removed all together
### if no recodes are necessary. The following predisclosure recode guidelines
### are meant to ensure seemless integration of modules.
### (1) variables should not be recoded in place. ie don't overwrite old variables even if all the recode does is change a variables type from str to int so that it can be used as an array index for example.
### (2) recoder should operate on and return sql Row objects
# package.module_name.class_name for predisclosure recodes


Person.recoder: programs.reader.e2e_recoder.DHCP2020_recoder
# table_name.recode_variables - list of new variable names
Person.recode_variables: cenrace

#UnitData.recoder= programs.reader.e2e_recoder.unit_recoder
#UnitData.recode_variables= gqtype
# variable_name= space delimited list of variables needed to do the recode
cenrace: race
#votingage= age
#gqtype= relation
# Include the same attr information as above
cenrace.type: int
cenrace.legal: 0-62

Unit.recoder: programs.reader.hh_recoder.Table10RecoderDHCP
Unit.recode_variables: hhgq_unit_dhcp
# variable_name: space delimited list of variables needed to do the recode

hhgq_unit_dhcp: gqtype

# Include the same attr information as above
hhgq_unit_dhcp.type: int
hhgq_unit_dhcp.legal: 0-24

#hhgqinv.type: int
#hhgqinv.legal: 0-999

Person.geography: geocode
Person.histogram: relgq sex age hispanic cenrace

### number of partitions desired when reading tables into spark dataframes
numReaderPartitions= 10000
#rangePartition= True
readerPartitionLen= 12


Unit.geography: geocode
#Unit.histogram: hhgqinv
Unit.histogram: hhgq_unit_dhcp
#Pop.unique: MAFID
