# Default PL94 config file
# Modification log:
# 2019-08-02 - slg - added [python] and [spark] sections

[default]
include=../default.ini

[spark]
spark.driver.maxResultSize=0g
spark.executor.memoryOverhead=16g
spark.local.dir=/mnt/tmp/
spark.eventLog.enabled=true
spark.eventLog.dir=/mnt/tmp/logs/
spark.submit.deployMode=client
spark.network.timeout=3000

[reader]
# package(s).module_name.class_name of the reader module
reader: programs.reader.table_reader.DASDecennialReader
###
### List of tables (assuming 3 but might be more)
### These tables have decennial census specific process methods
### Table class methods will likely need to be rewritten for other applications
###
tables: PersonData UnitData

main_table: PersonData
unit_table: UnitData

# table_name.class: specify object type of each table
# Geography.class: table.GeographyTable implement later.
PersonData.class: programs.reader.table.DenseHistogramTable
UnitData.class: programs.reader.table.UnitFromPersonTable
# table_name.path - location of dir of filename=======

PersonData.path: ${DAS_S3INPUTS}/title13_input_data/table8/
UnitData.path: ${DAS_S3INPUTS}/title13_input_data/table8/
#UnitData.path: ${DAS_S3INPUTS}/title13_input_data/table10/

# file format (assuming all tables will have the same file format)
# we could change this to be "table_name.format_option" if need be.
delimiter: \t
header: True
# If a header exists, this must be set to "True".
# table_name.variables - space delimited ordered list of all the variables in a table.
# Geography.variables: state county block etc will add later.
PersonData.variables: MAFID geocode white black aian asian nhopi other hispanic sex householder votingage hhgq
UnitData.variables: MAFID geocode white black aian asian nhopi other hispanic sex householder votingage hhgq
#UnitData.variables:  MAFID geocode gqtype
linkage: geocode

###
### For each variable in each table the following must be included:
### variable_name.type: "str" or "int"
### variable_name.legal: comma-delimited list of legal value expressions.
###                      an expression may be a single value or a range
###                      defined by two values with a "-" between them.
###                      All ranges are assumed to be closed on both ends.
###                      ie the range 0-115 includes both 0 and 115.
###
### For each variable the following is optional:
### variable_name.e2e:  special legal value for the 2018 end to end test.
###
### Note: we do not use table_name.variable_name.attribute to define these.
###

geocode.type: str
geocode.legal: 0000000000000000-9999999999999999
MAFID.type: str
MAFID.legal: 000000000-999999999
householder.type: int
householder.legal: 0,1
sex.type: int
sex.legal: 0,1
votingage.type: int
votingage.legal: 0,1
hispanic.type: int
hispanic.legal: 0,1
white.type: int
white.legal: 0,1
black.type: int
black.legal: 0,1
aian.type: int
aian.legal: 0,1
asian.type: int
asian.legal: 0,1
nhopi.type: int
nhopi.legal: 0,1
other.type: int
other.legal: 0,1
hhgq.type: int
hhgq.legal: 0-7
###
### Some variables must be recoded before the disclosure engine runs.
### These recodes are very specific to the decennial census and in particular
### the 2018 test. However the module is pluggable or may be removed all together
### if no recodes are necessary. The following predisclosure recode guidelines
### are meant to ensure seemless integration of modules.
### (1) variables should not be recoded in place. ie don't overwrite old variables even if all the recode does is change a variables type from str to int so that it can be used as an array index for example.
### (2) recoder should operate on and return sql Row objects
# package.module_name.class_name for predisclosure recodes
PersonData.recoder: programs.reader.e2e_recoder.table8_recoder
# table_name.recode_variables - list of new variable names
PersonData.recode_variables: cenrace

#UnitData.recoder: programs.reader.e2e_recoder.unit_recoder
#UnitData.recode_variables: gqtype
# variable_name: space delimited list of variables needed to do the recode
cenrace: white black aian asian nhopi other
#votingage: age
#gqtype: relation
# Include the same attr information as above
cenrace.type: int
cenrace.legal: 0-62
#votingage.type: int
#votingage.legal: 0,1
#gqtype.type: int
#gqtype.legal: 0-2

###
### The reader needs to know which variables to build the numpy multiarray over.
### For now the only
# rename geography -> groupby for more general use.
PersonData.geography: geocode
PersonData.histogram: hhgq votingage hispanic cenrace

;gqtype.type: str
;gqtype.legal: 000-999
;
;hhgqinv.type: int
;hhgqinv.legal: 0-7
;hhgqinv: gqtype
;
;UnitData.recoder: programs.reader.hh_recoder.Table10RecoderSimple
;UnitData.recode_variables: hhgqinv

UnitData.geography: geocode
UnitData.histogram: hhgq
#UnitData.histogram: hhgqinv
UnitData.unique: MAFID
